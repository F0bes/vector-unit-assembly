{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Vector Unit Assembly",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#registers"
		},
		{
			"include": "#lowerinstructions"
		},
		{
			"include": "#upperinstructions"
		},
		{
			"include": "#directives"
		},
		{
			"include": "#labels"
		},
		{
			"include": "#constants"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.semicolon.microprogram",
					"match": ";.*$"
				}
			]
		},
		"registers": {
			"patterns": [
				{
					"name": "variable.parameter.microprogram",
					"match": "(?i)\\b(VF(?:0[0-9]|1\\d|2[0-9]|3[01])(?:[xyzw]+)?|VI(?:0[0-9]|1[0-6]|)|P|I|Q)\\b"
				}
			]
		},
		"lowerinstructions" :{
			"patterns": [
				{
					"name": "keyword.control.microprogram",
					"match": "(?i)\\b(loi|nop|b|bal|div|eatan|eatanxy|eatanxz|eexp|eleng|ercpr|erleng|ersadd|ersqrt|esadd|esin|esqrt|esum|fcand|fceq|fcget|fcor|fcset|fmand|fmeq|fmor|fsand|fseq|fsor|fsset|iadd|iaddi|iaddiu|iand|ior|isub|isubiu|jalr|jr|mtir|rinit|rsqrt|rxor|sqrt|waitp|waitq|xgkick|xitop|xtop)\\b"
				},
				{
					"name": "keyword.control.microprogram",
					"match": "(?i)\\b((ilw|ilwr|isw|iswr|lq|lqd|ldi|mfir|mfp|move|mr32|rget|rnext|sq|sqd|sqi)(?:\\.?[xyzw]+)?)\\b",
					"captures": {
						"1": {
							"name": "variable.parameter.microprogram"
						},
						"2": {
							"name": "keyword.control.microprogram"
						}
					}
				},
				{
					"match": "\\b(?i)(ibeq|ibgez|ibgtz|iblez|ibltz|ibne)\\s+([^,]+),\\s+([^,]+),\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.control.microprogram"
						},
						"2": {
							"name": "variable.parameter.microprogram"
						},
						"3": {
							"name": "variable.parameter.microprogram"
						},
						"4": {
							"name": "entity.name.function.microprogram"
						}
					}
				}
			]
		},
		"upperinstructions": {
			"patterns": [
			{
				"name": "keyword.control.microprogram",
				"match": "(?i)\\b(opmsub|opmula|clipw)(?:\\.?xyz+)?\\b"
			},
			{
				"name": "keyword.control.microprogram",
				"match": "(?i)\\b((abs|add|addi|addq|adda|addao|addaq|ftoi0|ftoi4|ftoi12|ftoi15|itof0|itof12|itof15|madd|maddi|maddq|madda|maddai|maddaq|max|maxi|mini|minii|msub|msubi|msubq|msuba|msubai|msubaq|mul|muli|mulq|mula|mulai|mulaq|sub|subi|subq|suba|subai|subaq)(?:\\.[xyzw]+)?)\\b"
			},
			{
				"name": "keyword.control.microprogram",
				"match": "(?i)\\b(add|adda|madd|madda|maxi|mini|msub|msuba|mul|mula|sub|suba)(?:[xyzw])(?:\\.[xyzw]+)?\\b"
			}
		]
		},
		"directives": {
			"patterns": [
				{
					"name": "variable.control.microprogram",
					"match": "\\.align|\\.global|\\.vu"
				},
				{
					"name": "support.function.microprogram",
					"match": "(?<=\\.global\\s+)([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				},
				{
					"name": "constant.numeric.microprogram",
					"match": "(?<=\\.align\\s+)([0-9]+)\\b"
				}
			]
		},
		"labels": {
			"patterns": [
				{
					"name": "entity.name.function.microprogram",
					"match": "[a-zA-Z_][a-zA-Z0-9_]*:"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.microprogram",
					"match": "\\b0x[0-9a-fA-F]+\\b"
				},
				{
					"name": "constant.numeric.microprogram",
					"match": "\\b[0-9]+\\b"
				}
			]
		}
	},
	"scopeName": "source.microprogram"
}
